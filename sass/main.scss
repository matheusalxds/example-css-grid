
.container {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;

  // height: 1000px;

  // fr means fractionality unit

  display: grid;
  // grid-template-rows: 150px 150px;
  grid-template-rows: repeat(2, 150px); // it's the same like above

  // we can use '1fr' in rows too but we need to set the height
  // grid-template-rows: repeat(2, 1fr); // it's the same like above

  // grid-template-columns: 150px 150px 150px;
  // grid-template-columns: repeat(2, 150px) 300px;
  // we can use '1fr' to occupy all the remaining space
  // grid-template-columns: repeat(2, 150px) 1fr;

  //  using percentage
  // grid-template-columns: 50% 1fr 2fr;

  // So, how to create 3 columns with the same space?
  grid-template-columns: repeat(3, 1fr);

  // grid-row-gap: 30px;
  // grid-column-gap: 30px;
  grid-gap: 30px;
}

.item {
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
  color: white;

  &--1 {
    background-color: orangered;
    //  Codes to move the 1rd cell for 5rd cell
    //  so, we can use this

    //  grid-row-start: 2;
    //  grid-row-end: 3;
    //  grid-column-start: 2;
    //  grid-column-end: 3;

    //  Simplifying
    //      start / end
    grid-row: 2 / 3;
    grid-column: 2 / 3;
    // after set the 5rd cell
    // with:
    //    grid-row: 1 / 2;
    //    grid-column: 3 / 4;
    // this cell got hidden!
    // To be visibly, we need to set z-index to appear
    z-index: 2;
  }

  &--2 {
    background-color: yellowgreen;
    //grid-column: 2 / span 3;
    // another way
    // -1 = go until the end
    // now we go from column line number 2 all the way until the end
    grid-column: 2 / -1;
  }

  &--3 {
    background-color: blueviolet;
    grid-column: 1 / 3;
    grid-row: 2 / 3;
  }

  &--4 {
    background-color: palevioletred;
  }

  &--5 {
    background-color: royalblue;
    grid-row: 1 / 3;
    grid-column: 3 / 4;
    //  another way to positioning area
    //  grid-area: 1 / 3 / 2 / 4
  }

  &--6 {
    background-color: goldenrod;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
  }
}

/*
// METHOD 1: LINE NUMBERS
.challenge {
  width: 1020px;
  margin: 30px auto;

  display: grid;
  grid-gap: 20px;

  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px;

  & > * {
    padding: 20px;
    background-color: red;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }

  &__header {
    grid-column: 1 / -1;
  }

  &__main-content {
    grid-row: 3 / 4;
    //grid-column: 1 / 4; // is more intuitive to use span
    grid-column: 1 / span 3;
  }

  &__sidebar {
    //grid-row: 2 / 4;
    grid-row: 2 / span 2; // is more intuitive to use span
    grid-column: 4 / 5;
  }

  &__footer {
    grid-row: 4 / 5;
    grid-column: 1 / -1;
  }
}
*/

/*
// METHOD 2: LINE NAMES
.challenge {
  width: 1020px;
  margin: 30px auto;

  display: grid;
  grid-gap: 20px;

  grid-template-rows: [header-start] 100px [header-end box-start]
                                     200px [box-end main-start]
                                     400px [main-end footer-start]
                                     100px [footer-end];
  grid-template-columns: repeat(3, [col-start] 1fr [col-end] ) 200px [grid-end];

  & > * {
    padding: 20px;
    background-color: red;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }

  &__header {
    grid-column: col-start 1 / grid-end;
  }

  &__main-content {
    grid-column: col-start 1 / col-end 3;
  }

  &__sidebar {
    grid-row: box-start / main-end;
    grid-column: col-end 3 / grid-end;
  }

  &__footer {
    grid-column: col-start 1 / grid-end;
  }
}
*/

// METHOD 3: NAME GRID AREAS
.challenge {
  width: 1020px;
  margin: 30px auto;

  display: grid;
  grid-gap: 20px;

  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px;

  grid-template-areas: ". head head ." "box-1 box-2 box-3 side" "main main main side" "foot foot foot foot";

  & > * {
    padding: 20px;
    background-color: red;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }

  &__header {
    grid-area: head;
  }

  &__main-content {
    grid-area: main;
  }

  .box-1 {
    grid-area: box-1;
  }
  .box-2 {
    grid-area: box-2;
  }
  .box-3 {
    grid-area: box-3;
  }

  &__sidebar {
    grid-area: side;
  }

  &__footer {
    grid-area: foot;
  }
}

.container2 {
  width: 1000px;
  margin: 30px auto;
  background-color: #ddd;

  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 30px;

  grid-auto-rows: 80px;

  // Change the default flow for column and not row
  grid-auto-flow: row;
  grid-auto-columns: .5fr;

  // STRETCH IS THE DEFAULT
  align-items: center; // STRETCH / center / end / start
  justify-items: center;

  .item2 {
    padding: 10px;
    color: white;
    font-family: sans-serif;
    font-size: 30px;
    background-color: orangered;

    &--4 {
      background-color: crimson;
      grid-row: 2 / span 3;
      // align or justify self override the align of the container, so they'll align yourself
      align-self: start;
      justify-self: start;
    }

    &--7 {
      background-color: palevioletred;
      grid-column: 1 / -1;
    }
  }
}
